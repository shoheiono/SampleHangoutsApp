<Module>
<!--
 Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *	
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License
-->
<ModulePrefs title="Hangout Starter">
<Require feature="rpc"/>
<Require feature="views"/>
<Require feature="locked-domain"/>
</ModulePrefs>
<Content type="html">
<![CDATA[
<html>
	<style type="text/css">
		body {
			background-color: rgba(230, 236, 180, 0.8);
		}
		h1, h2, h3, h4, h5 {
			margin: 0;
			padding: 0;
		}
		#content {
			display:block;
			margin: 6px;
		}

		#content.is-hidden {
			display: none;
		}
	</style>
	<body>
		<script src="//plus.google.com/hangouts/_/api/v1/hangout.js"></script>
		<section id="content" class="is-hidden">
			<h3>Sample Hangout App</h3>
			<div id="button">ボタン</div>
			<div id="dataButton">データ</div>
		</section>
		<script>
			function initialize() {
				var parentWindow = window.parent;
				var hangout = gapi.hangout;
				hangout.onApiReady.add(function(eventObj) {
					if (eventObj.isApiReady) {
						var content = document.getElementById('content');
						var button = document.getElementById('button');
						var dataButton = document.getElementById('dataButton');
						content.classList.remove('is-hidden');
						button.addEventListener('click', function() {
							var participants = gapi.hangout.getParticipants();
							alert(participants.map(function(val) {return val.person.displayName;}).join(', '));
						}, false);
						dataButton.addEventListener('click', function() {
							console.log('↓データ↓');
							console.log(gapi.hangout, gapi.hangout.data);
							console.log('↑データ↑');
						}, false);
					}
				});
			}
			// Wait for gadget to load.
			gadgets.util.registerOnLoadHandler(initialize);
		</script>
	</body>
</html>
]]>
</Content>
</Module>